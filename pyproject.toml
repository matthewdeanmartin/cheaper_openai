[tool.poetry]
name = "cheaper_openai"
version = "0.1.0"
description = "Cheap knock off of ChatGPT (still using openai) optimized for software development."
authors = ["Matthew Martin <matthewdeanmartin@gmail.com>"]
keywords = ["openai", "davinci", "chatgpt",]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
]
include = [
    "chats/**/*.py",
    "chats/**/*.md",
    "chats/**/*.txt",
    "chats/**/*.html",
    "chats/**/*.jinja",
]
exclude = [
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/matthewdeanmartin/cheaper_openai"
homepage = "https://github.com/matthewdeanmartin/cheaper_openai"
documentation ="https://github.com/matthewdeanmartin/cheaper_openai"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/matthewdeanmartin/cheaper_openai/issues"
"Change Log" = "https://github.com/matthewdeanmartin/cheaper_openai/blob/main/CHANGES.md"

[tool.poetry.scripts]
dedlin = 'cheaper_openai.__main__:run'

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
openai = ">=1.3.3"
python-dotenv = ">=1.0.0"

transformers = ">=4.29.2"

# AI Glue
untruncate-json = "^1.0.0"
tiktoken = ">=0.4.0"

# Prompt processing
html2text = "^2020.1.16"

symspellpy = ">=6.7.7"

markpickle = "^1.6.1"
markdown-it-py = "^3.0.0"
mdit-plain = "^1.0.1"
mdformat = ">=0.7.16"
linkcheckmd = ">=1.4.0"
marko = ">=1.3.0"

# Tools for AI Bots
py-readability-metrics = "^1.4.5"
stdlib-list = "^0.10.0"
inflect = "^7.0.0"

# dual purpose tools/test/build
gitpython = ">=3.1.31"
python-minifier = ">=2.9.0"

[tool.poetry.dev-dependencies]
black = ">=23.11.0"
pytest = ">=7.4.3"
mypy = ">=1.7.0"
pre-commit = ">=3.5.0"
pylint = ">=3.0.2"
scriv = ">=1.5.0"

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "test",
    "tests"
]
junit_family = "xunit1"
norecursedirs = ["vendor", "scripts"]
# don't know how to do this in toml
#addopts = "--strict-markers"
#markers =
#	slow: marks tests as slow (deselect with '-m "not slow"')
#	fast: marks tests as fast (deselect with '-m "not fast"')

[tool.isort]
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["dedlin"]
line_length = 120
multi_line_output = 3
use_parentheses = true

[tool.ruff]
line-length = 1000

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = [
    "E722"
]

# Exclude a variety of commonly ignored directories.
exclude = [
    "dead_code",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py311"



[tool.scriv]
version = "literal: pyproject.toml: tool.poetry.version"
format = "md"
main_branches = "master, main, develop, dev"

